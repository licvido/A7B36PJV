package adresar;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.xml.stream.XMLStreamException;
import javax.xml.transform.TransformerException;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.ListCellRenderer;
import javax.swing.ListSelectionModel;

/**
 * The application's main frame.
 */
public class AdresarView extends FrameView {

    private Adresar adresar;
    private DefaultListModel listModel;
    


    public AdresarView(SingleFrameApplication app) throws XMLStreamException, IOException, TransformerException {
        super(app);

        this.adresar = new Adresar();
        
        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    /*
    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = AdresarApp.getApplication().getMainFrame();
            aboutBox = new AdresarAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        AdresarApp.getApplication().show(aboutBox);
    }
    */

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        toolBar = new javax.swing.JToolBar();
        poleHledani = new javax.swing.JTextField();
        tlacitkoHledatKontakt = new javax.swing.JButton();
        oddelovac1 = new javax.swing.JToolBar.Separator();
        tlacitkoPridatKontakt = new javax.swing.JButton();
        tlacitkoOdebratKontakt = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        seznam = new javax.swing.JList();
        panelFormular = new javax.swing.JPanel();
        tlacitkoUlozit = new javax.swing.JButton();
        poleEmail = new javax.swing.JTextField();
        labelAdresa = new javax.swing.JLabel();
        polePrijmeni = new javax.swing.JTextField();
        labelPrijmeni = new javax.swing.JLabel();
        labelEmail = new javax.swing.JLabel();
        poleJmeno = new javax.swing.JTextField();
        poleAdresa = new javax.swing.JTextField();
        labelJmeno = new javax.swing.JLabel();
        labelMobil = new javax.swing.JLabel();
        poleMobil = new javax.swing.JTextField();
        labelTelefon = new javax.swing.JLabel();
        poleTelefon = new javax.swing.JTextField();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu menuProgram = new javax.swing.JMenu();
        javax.swing.JMenuItem menuProgramItemUkoncit = new javax.swing.JMenuItem();
        menuKontakt = new javax.swing.JMenu();
        menuKontaktItemPridat = new javax.swing.JMenuItem();
        menuKontaktItemOdebrat = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        mainPanel.setName("mainPanel"); // NOI18N

        toolBar.setRollover(true);
        toolBar.setName("toolBar"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(adresar.AdresarApp.class).getContext().getResourceMap(AdresarView.class);
        poleHledani.setFont(resourceMap.getFont("poleHledani.font")); // NOI18N
        poleHledani.setText(resourceMap.getString("poleHledani.text")); // NOI18N
        poleHledani.setMargin(new java.awt.Insets(2, 10, 2, 10));
        poleHledani.setName("poleHledani"); // NOI18N
        toolBar.add(poleHledani);

        tlacitkoHledatKontakt.setIcon(resourceMap.getIcon("tlacitkoHledatKontakt.icon")); // NOI18N
        tlacitkoHledatKontakt.setText(resourceMap.getString("tlacitkoHledatKontakt.text")); // NOI18N
        tlacitkoHledatKontakt.setFocusable(false);
        tlacitkoHledatKontakt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tlacitkoHledatKontakt.setName("tlacitkoHledatKontakt"); // NOI18N
        tlacitkoHledatKontakt.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tlacitkoHledatKontakt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tlacitkoHledatKontaktActionPerformed(evt);
            }
        });
        toolBar.add(tlacitkoHledatKontakt);

        oddelovac1.setName("oddelovac1"); // NOI18N
        toolBar.add(oddelovac1);

        tlacitkoPridatKontakt.setIcon(resourceMap.getIcon("tlacitkoPridatKontakt.icon")); // NOI18N
        tlacitkoPridatKontakt.setText(resourceMap.getString("tlacitkoPridatKontakt.text")); // NOI18N
        tlacitkoPridatKontakt.setFocusable(false);
        tlacitkoPridatKontakt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tlacitkoPridatKontakt.setName("tlacitkoPridatKontakt"); // NOI18N
        tlacitkoPridatKontakt.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(tlacitkoPridatKontakt);

        tlacitkoOdebratKontakt.setIcon(resourceMap.getIcon("tlacitkoOdebratKontakt.icon")); // NOI18N
        tlacitkoOdebratKontakt.setText(resourceMap.getString("tlacitkoOdebratKontakt.text")); // NOI18N
        tlacitkoOdebratKontakt.setFocusable(false);
        tlacitkoOdebratKontakt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tlacitkoOdebratKontakt.setName("tlacitkoOdebratKontakt"); // NOI18N
        tlacitkoOdebratKontakt.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tlacitkoOdebratKontakt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tlacitkoOdebratKontaktActionPerformed(evt);
            }
        });
        toolBar.add(tlacitkoOdebratKontakt);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        this.listModel = new DefaultListModel();

        Kontakt[] kontakty = this.adresar.getKontaktyArray();

        for(Kontakt kontakt : kontakty) {
            this.listModel.addElement(kontakt);
        }
        seznam.setModel(this.listModel);
        seznam.setCellRenderer(new ListRenderer());
        seznam.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        seznam.setLayoutOrientation(JList.VERTICAL);
        seznam.setName("seznam"); // NOI18N
        jScrollPane1.setViewportView(seznam);

        panelFormular.setName("panelFormular"); // NOI18N

        tlacitkoUlozit.setText(resourceMap.getString("tlacitkoUlozit.text")); // NOI18N
        tlacitkoUlozit.setName("tlacitkoUlozit"); // NOI18N
        tlacitkoUlozit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tlacitkoUlozitActionPerformed(evt);
            }
        });

        poleEmail.setEnabled(false);
        poleEmail.setName("poleEmail"); // NOI18N
        poleEmail.setPreferredSize(new java.awt.Dimension(100, 20));

        labelAdresa.setText(resourceMap.getString("labelAdresa.text")); // NOI18N
        labelAdresa.setName("labelAdresa"); // NOI18N

        polePrijmeni.setEnabled(false);
        polePrijmeni.setName("polePrijmeni"); // NOI18N
        polePrijmeni.setPreferredSize(new java.awt.Dimension(100, 20));

        labelPrijmeni.setText(resourceMap.getString("labelPrijmeni.text")); // NOI18N
        labelPrijmeni.setName("labelPrijmeni"); // NOI18N

        labelEmail.setText(resourceMap.getString("labelEmail.text")); // NOI18N
        labelEmail.setName("labelEmail"); // NOI18N

        poleJmeno.setEnabled(false);
        poleJmeno.setName("poleJmeno"); // NOI18N
        poleJmeno.setPreferredSize(new java.awt.Dimension(100, 20));

        poleAdresa.setEnabled(false);
        poleAdresa.setName("poleAdresa"); // NOI18N
        poleAdresa.setPreferredSize(new java.awt.Dimension(100, 20));

        labelJmeno.setText(resourceMap.getString("labelJmeno.text")); // NOI18N
        labelJmeno.setName("labelJmeno"); // NOI18N

        labelMobil.setText(resourceMap.getString("labelMobil.text")); // NOI18N
        labelMobil.setName("labelMobil"); // NOI18N

        poleMobil.setEnabled(false);
        poleMobil.setName("poleMobil"); // NOI18N
        poleMobil.setPreferredSize(new java.awt.Dimension(100, 20));

        labelTelefon.setText(resourceMap.getString("labelTelefon.text")); // NOI18N
        labelTelefon.setName("labelTelefon"); // NOI18N

        poleTelefon.setEnabled(false);
        poleTelefon.setName("poleTelefon"); // NOI18N
        poleTelefon.setPreferredSize(new java.awt.Dimension(100, 20));

        javax.swing.GroupLayout panelFormularLayout = new javax.swing.GroupLayout(panelFormular);
        panelFormular.setLayout(panelFormularLayout);
        panelFormularLayout.setHorizontalGroup(
            panelFormularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFormularLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFormularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelFormularLayout.createSequentialGroup()
                        .addGroup(panelFormularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(poleJmeno, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelJmeno))
                        .addGap(18, 18, 18)
                        .addGroup(panelFormularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(polePrijmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelPrijmeni)))
                    .addGroup(panelFormularLayout.createSequentialGroup()
                        .addGroup(panelFormularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(poleTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTelefon))
                        .addGap(18, 18, 18)
                        .addGroup(panelFormularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(poleMobil, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelMobil)))
                    .addComponent(labelAdresa)
                    .addComponent(labelEmail)
                    .addComponent(poleAdresa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(poleEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFormularLayout.createSequentialGroup()
                .addContainerGap(269, Short.MAX_VALUE)
                .addComponent(tlacitkoUlozit)
                .addContainerGap())
        );
        panelFormularLayout.setVerticalGroup(
            panelFormularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFormularLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFormularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelFormularLayout.createSequentialGroup()
                        .addComponent(labelPrijmeni)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(polePrijmeni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelFormularLayout.createSequentialGroup()
                        .addComponent(labelJmeno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(poleJmeno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(panelFormularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelFormularLayout.createSequentialGroup()
                        .addComponent(labelTelefon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(poleTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelFormularLayout.createSequentialGroup()
                        .addComponent(labelMobil)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(poleMobil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(labelAdresa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(poleAdresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelEmail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(poleEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tlacitkoUlozit)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelFormular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(toolBar, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(toolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelFormular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)))
        );

        menuBar.setName("menuBar"); // NOI18N

        menuProgram.setText(resourceMap.getString("menuProgram.text")); // NOI18N
        menuProgram.setName("menuProgram"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(adresar.AdresarApp.class).getContext().getActionMap(AdresarView.class, this);
        menuProgramItemUkoncit.setAction(actionMap.get("quit")); // NOI18N
        menuProgramItemUkoncit.setText(resourceMap.getString("menuProgramItemUkoncit.text")); // NOI18N
        menuProgramItemUkoncit.setName("menuProgramItemUkoncit"); // NOI18N
        menuProgram.add(menuProgramItemUkoncit);

        menuBar.add(menuProgram);

        menuKontakt.setText(resourceMap.getString("menuKontakt.text")); // NOI18N
        menuKontakt.setName("menuKontakt"); // NOI18N

        menuKontaktItemPridat.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        menuKontaktItemPridat.setText(resourceMap.getString("menuKontaktItemPridat.text")); // NOI18N
        menuKontaktItemPridat.setName("menuKontaktItemPridat"); // NOI18N
        menuKontakt.add(menuKontaktItemPridat);

        menuKontaktItemOdebrat.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        menuKontaktItemOdebrat.setText(resourceMap.getString("menuKontaktItemOdebrat.text")); // NOI18N
        menuKontaktItemOdebrat.setName("menuKontaktItemOdebrat"); // NOI18N
        menuKontakt.add(menuKontaktItemOdebrat);

        menuBar.add(menuKontakt);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 325, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void tlacitkoHledatKontaktActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tlacitkoHledatKontaktActionPerformed
        Kontakt[] kontakty = AdresarView.this.adresar.getKontaktyArray();
        String vyhledavane = poleHledani.getText();
        for(Kontakt kontakt : kontakty) {
            if(kontakt.getPrijmeni().equals(vyhledavane)) {
                this.seznam.setSelectedValue(kontakt, true);
                return;
            }
        }
        
    }//GEN-LAST:event_tlacitkoHledatKontaktActionPerformed

    private void tlacitkoUlozitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tlacitkoUlozitActionPerformed
        try {
            this.adresar.ulozKontakty();
        } catch (XMLStreamException ex) {
            Logger.getLogger(AdresarView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(AdresarView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (TransformerException ex) {
            Logger.getLogger(AdresarView.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.seznam.clearSelection();
    }//GEN-LAST:event_tlacitkoUlozitActionPerformed

    private void tlacitkoOdebratKontaktActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tlacitkoOdebratKontaktActionPerformed
        try {
            this.adresar.removeKontakt((Kontakt) this.seznam.getSelectedValue());
        } catch (XMLStreamException ex) {
            Logger.getLogger(AdresarView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(AdresarView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (TransformerException ex) {
            Logger.getLogger(AdresarView.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.seznam.setSelectedIndex(-1);
    }//GEN-LAST:event_tlacitkoOdebratKontaktActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelAdresa;
    private javax.swing.JLabel labelEmail;
    private javax.swing.JLabel labelJmeno;
    private javax.swing.JLabel labelMobil;
    private javax.swing.JLabel labelPrijmeni;
    private javax.swing.JLabel labelTelefon;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuKontakt;
    private javax.swing.JMenuItem menuKontaktItemOdebrat;
    private javax.swing.JMenuItem menuKontaktItemPridat;
    private javax.swing.JToolBar.Separator oddelovac1;
    private javax.swing.JPanel panelFormular;
    private javax.swing.JTextField poleAdresa;
    private javax.swing.JTextField poleEmail;
    private javax.swing.JTextField poleHledani;
    private javax.swing.JTextField poleJmeno;
    private javax.swing.JTextField poleMobil;
    private javax.swing.JTextField polePrijmeni;
    private javax.swing.JTextField poleTelefon;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JList seznam;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JButton tlacitkoHledatKontakt;
    private javax.swing.JButton tlacitkoOdebratKontakt;
    private javax.swing.JButton tlacitkoPridatKontakt;
    private javax.swing.JButton tlacitkoUlozit;
    private javax.swing.JToolBar toolBar;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;


    private void upraveniKontaktu(Kontakt kontakt) {
        if(kontakt == null) {
            poleAdresa.setText("");
            poleAdresa.setEnabled(false);
            poleEmail.setText("");
            poleEmail.setEnabled(false);
            poleJmeno.setText("");
            poleJmeno.setEnabled(false);
            poleMobil.setText("");
            poleMobil.setEnabled(false);
            polePrijmeni.setText("");
            polePrijmeni.setEnabled(false);
            poleTelefon.setText("");
            poleTelefon.setEnabled(false);
        } else {
            poleAdresa.setText(kontakt.getAdresa());
            poleAdresa.setEnabled(true);
            poleEmail.setText(kontakt.getEmail());
            poleEmail.setEnabled(true);
            poleJmeno.setText(kontakt.getJmeno());
            poleJmeno.setEnabled(true);
            poleMobil.setText(kontakt.getMobil());
            poleMobil.setEnabled(true);
            polePrijmeni.setText(kontakt.getPrijmeni());
            polePrijmeni.setEnabled(true);
            poleTelefon.setText(kontakt.getTelefon());
            poleTelefon.setEnabled(true);
        }
    }

    private class ListRenderer extends JLabel implements ListCellRenderer {
        public final Color SELECTED_BORDER = new Color(99, 130, 191);

        @Override
        public Component getListCellRendererComponent(final JList list,
                                                      final Object value,
                                                      final int index,
                                                      final boolean isSelected,
                                                      final boolean cellHasFocus) {
            Kontakt kontakt = (Kontakt) value;
            this.setText(kontakt.toString());
            this.setFont(this.getFont().deriveFont(Font.BOLD));

            if (isSelected) {
                this.setBorder(BorderFactory.createLineBorder(this.SELECTED_BORDER));
            } else {
                this.setBorder(null);
            }

            if (seznam.getSelectedIndex() >= 0) {
                AdresarView.this.upraveniKontaktu(kontakt);
                tlacitkoUlozit.setEnabled(true);
                tlacitkoOdebratKontakt.setEnabled(true);
            } else {
                AdresarView.this.upraveniKontaktu(null);
                tlacitkoUlozit.setEnabled(false);
                tlacitkoOdebratKontakt.setEnabled(false);
            }

            return this;
        }
    }

}
